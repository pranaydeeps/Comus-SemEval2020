########################################################################################
##  To run the script extractFeatureVectors.py , a feature file is needed             ##
##  The feature file indicates which features should be extracted                     ##
##  line format: feature<TAB>value                                                    ##
##  Value should be True or False if not indicated otherwise                          ##
##  Copy this file to your working directory and change feature values where necessary##
########################################################################################

# Which token ngram features should be used? Define a range using 2 integers separated by a hyphen
# e.g. 1-3 -> token unigram, bigram and trigram features will be extracted
# Define a range 0-0 if no token ngram features should be used
tokenNgramFeatureRange	1-3

# Which character ngram features should be used? Define a range using a hyphen (e.g. 3-4)
# 1 = unigram, 2 = bigram, etc.
# Define a range 0-0 if no character ngram features should be used
characterNgramFeatureRange	3-4

# Should the number of flooded tokens be used as a feature?
countFloodedTokens	True

# Should the number of flooded punctuation tokens be used as a feature?
countFloodedPunctuationTokens	True

# Should the presence of punctuation symbols in the last token be used as a feature?
punctuationLastToken	False

# Should the number of capitalized tokens be used as a feature?
countCapitalizedTokens	True

# Should the number of hashtags be used as a feature?
countHashtags	True

# Which sentiment lexicons should be used?
# Choose any combination of the following lexicon names (separated by spaces):
# 'Duoman', 'DuomanMan', 'Pattern', 'PatternMan'
# Use the string 'NONE' if no lexicon features will be used
sentimentLexicons	NONE

# Which types of sentiment lexicon features should be used?
# Choose any combination of the following (separated by spaces):
# 'posTokens', 'negTokens', 'neutTokens', 'overallValue'
# Use the string 'NONE' if no lexicon features will be used
lexiconFeatureTypes	NONE

# Should sentiment lexicon features be extracted for hash tokens?
# (hash tokens are hashtags with the hashtag symbol stripped off e.g. #twitter -> twitter)
includeHashtokenLexiconFeatures	false

# Which types of modifiers should be taken into account when determining the sentiment lexicon features?
# Choose any combination of the following (separated by spaces):
# 'negation' (e.g. 'not') , 'intensifier' (e.g. 'very'), 'diminisher' (ee.g. 'barely')
# Use the string 'NONE' if no modifiers should be taken into account
modifierTypes	NONE

# Which Part-of-Speech tag features should be used?
# Choose any combination of the following (separated by spaces):
# 'binary', 'ternary', 'absolute', 'frequency'
# Use the string 'NONE' if no PoS features will be used
PoSFeatureTypes	NONE

# Which Named Entity features should be used?
# Choose any combination of the following (separated by spaces):
# 'binary', 'absolute', 'absoluteTokens', 'frequencyTokens'
# Use the string 'NONE' if no NE features will be used
NEFeatureTypes	NONE

# Which dependency relation features should be used?
# Choose any combination of the following (separated by spaces):
# 'hm-lex' (lexicalized), 'h-bo' (head backed off), 'm-bo' (modifier backed off), 'hm-bo' (both backed off)
# Use the string 'NONE' if no dependency relation features will be used
dependencyFeatureTypes	NONE

# Which lexicons should be used to create PMI ngram features?
# Choose any combination of the following (separated by spaces):
# 'NRC', 'SE' (SemEval)
# Use the string 'NONE' if no PMI ngram features will be used
PMILexicons	NONE
